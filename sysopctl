#!/bin/bash

VERSION="v0.1.0"

function show_help {
    echo "Usage: sysopctl [OPTIONS] COMMAND [ARGS]..."
    echo
    echo "A custom system operation command to manage services and monitor system health."
    echo
    echo "Options:"
    echo "  --help          Show help information"
    echo "  --version       Show version information"
    echo
    echo "Commands:"
    echo "  service list    List running services"
    echo "  service start   Start a specified service"
    echo "  service stop    Stop a specified service"
    echo "  system load     View system load"
    echo "  disk usage      Check disk usage"
    echo "  process monitor Monitor system processes"
    echo "  logs analyze    Analyze system logs"
    echo "  backup [path]   Backup system files"
    echo
}

function show_version {
    echo "sysopctl version $VERSION"
}

function list_services {
    systemctl list-units --type=service
}

function start_service {
    systemctl start "$1"
}

function stop_service {
    systemctl stop "$1"
}

function check_disk_usage {
    df -h
}

function monitor_processes {
    top
}

function analyze_logs {
    journalctl -p crit -n 20
}

function backup_files {
    rsync -av --progress "$1" /backup/
}

# Main script logic
case "$1" in
    --help)
        show_help
        ;;
    --version)
        show_version
        ;;
    service)
        case "$2" in
            list)
                list_services
                ;;
            start)
                start_service "$3"
                ;;
            stop)
                stop_service "$3"
                ;;
        esac
        ;;
    system)
        case "$2" in
            load)
                uptime
                ;;
        esac
        ;;
    disk)
        case "$2" in
            usage)
                check_disk_usage
                ;;
        esac
        ;;
    process)
        case "$2" in
            monitor)
                monitor_processes
                ;;
        esac
        ;;
    logs)
        case "$2" in
            analyze)
                analyze_logs
                ;;
        esac
        ;;
    backup)
        backup_files "$2"
        ;;
    *)
        echo "Invalid command. Use --help to see the list of available commands."
        ;;
esac
